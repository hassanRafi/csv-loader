// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package stores is a generated GoMock package.
package stores

import (
	reflect "reflect"

	types "github.com/csv-loader/types"
	gomock "github.com/golang/mock/gomock"
)

// MockCSVGetter is a mock of CSVGetter interface.
type MockCSVGetter struct {
	ctrl     *gomock.Controller
	recorder *MockCSVGetterMockRecorder
}

// MockCSVGetterMockRecorder is the mock recorder for MockCSVGetter.
type MockCSVGetterMockRecorder struct {
	mock *MockCSVGetter
}

// NewMockCSVGetter creates a new mock instance.
func NewMockCSVGetter(ctrl *gomock.Controller) *MockCSVGetter {
	mock := &MockCSVGetter{ctrl: ctrl}
	mock.recorder = &MockCSVGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCSVGetter) EXPECT() *MockCSVGetterMockRecorder {
	return m.recorder
}

// GetByKey mocks base method.
func (m *MockCSVGetter) GetByKey(key string) (*types.KeyValPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", key)
	ret0, _ := ret[0].(*types.KeyValPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey.
func (mr *MockCSVGetterMockRecorder) GetByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockCSVGetter)(nil).GetByKey), key)
}
